import javax.servlet.*;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import com.opencsv.CSVReader;


import javax.servlet.*;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import com.opencsv.CSVReader;

@WebServlet("/dailyTracking")

public class dailyTracking extends HttpServlet {
    private ArrayList<String[]> caloriesData;
    private HashMap<String, Integer> selectedItems;

    @Override
    public void init() throws ServletException {
        String caloriesFile = getServletContext().getRealPath("/WEB-INF/lib/caloriesData.csv");

        caloriesData = new ArrayList<>();
        selectedItems = new HashMap<>();

        try (CSVReader reader = new CSVReader(new FileReader(caloriesFile))) {
            String[] line;
            while ((line = reader.readNext()) != null) {
                line[1] = line[1].replaceAll("cal", "");
                caloriesData.add(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        String meal = request.getParameter("meal");

        if ("morning".equals(meal)) {
            // Display recommended calorie intake range for morning
            out.println("Recommended Calorie Intake Range in the Morning: 200-400 calories");
            out.println("<form method='post'>");
            out.println("<select name='foodItem'>");
            for (String[] data : caloriesData) {
                int calories = Integer.parseInt(data[1].trim().replaceAll("[^0-9]", "0"));
                if (calories >= 200 && calories <= 400) {
                    out.println("<option value='" + data[0] + "'>" + data[0] + " " + data[1] + "</option>");
                }
            }
            out.println("</select>");
            out.println("<input type='submit' value='Add to Total Calories'>");
            out.println("</form>");

            // Display total calories for dinner meal
            int totalCalories = 0;
            for (Map.Entry<String, Integer> entry : selectedItems.entrySet()) {
                totalCalories += entry.getValue();
            }
            out.println("Total Calories: " + totalCalories);
        } else if ("afternoon".equals(meal)) {
            // Display recommended calorie intake range for afternoon
            out.println("Recommended Calorie Intake Range in the Afternoon: 500-700 calories");
            out.println("<form method='post'>");
            out.println("<select name='foodItem'>");
            for (String[] data : caloriesData) {
                int calories = Integer.parseInt(data[1].trim().replaceAll("[^0-9]", "0"));
                if (calories >= 500 && calories <= 700) {
                    out.println("<option value='" + data[0] + "'>" + data[0] + " " + data[1] + "</option>");
                }
            }
            out.println("</select>");
            out.println("<input type='submit' value='Add to Total Calories'>");
            out.println("</form>");

            // Display total calories for dinner meal
            int totalCalories = 0;
            for (Map.Entry<String, Integer> entry : selectedItems.entrySet()) {
                totalCalories += entry.getValue();
            }
            out.println("Total Calories: " + totalCalories);
        } else if ("night".equals(meal)) {
            // Display recommended calorie intake range for dinner
            out.println("Recommended Calorie Intake Range at Dinner: 500-700 calories");
            out.println("<form method='post'>");
            out.println("<select name='foodItem'>");
            for (String[] data : caloriesData) {
                int calories = Integer.parseInt(data[1].trim().replaceAll("[^0-9]", "0"));
                if (calories >= 500 && calories <= 700) {
                    out.println("<option value='" + data[0] + "'>" + data[0] + " " + data[1] + "</option>");
                }
            }
            out.println("</select>");
            out.println("<input type='submit' value='Add to Total Calories'>");
            out.println("</form>");

            // Display total calories for dinner meal
            int totalCalories = 0;
            for (Map.Entry<String, Integer> entry : selectedItems.entrySet()) {
                totalCalories += entry.getValue();
            }
            out.println("Total Calories: " + totalCalories);
        }
    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        String foodItem = request.getParameter("foodItem");

        int addedCalories = 0;
        for (String[] data : caloriesData) {
            if (data[0].equals(foodItem)) {
                addedCalories = Integer.parseInt(data[1].trim().replaceAll("[^0-9]", "0"));
                if (selectedItems.containsKey(foodItem)) {
                    addedCalories += selectedItems.get(foodItem);
                }
                selectedItems.put(foodItem, addedCalories);
                break;
            }
        }

        // Check if total calories are below recommended, above recommended, or within range
        int totalCalories = 0;
        for (int cal : selectedItems.values()) {
            totalCalories += cal;
        }

        if ("morning".equals(request.getParameter("meal"))) {
            if (totalCalories < 200) {
                out.println("Total Calories is below recommended intake.");
            } else if (totalCalories > 400) {
                out.println("Total Calories is above recommended intake.");
            }
            // Redirect back to doGet for morning meal
            response.sendRedirect(request.getContextPath() + "/dailyTracking?meal=morning");
        } else if ("afternoon".equals(request.getParameter("meal"))) {
            if (totalCalories < 500 || totalCalories > 700) {
                out.println("Total Calories should be between 500 and 700 for the afternoon meal.");
            }
            // Redirect back to doGet for afternoon meal
            response.sendRedirect(request.getContextPath() + "/dailyTracking?meal=afternoon");
        } else if ("night".equals(request.getParameter("meal"))) {
            if (totalCalories < 500 || totalCalories > 700) {
                out.println("Total Calories should be between 500 and 700 for the dinner meal.");
            }
            // Redirect back to doGet for dinner meal
            response.sendRedirect(request.getContextPath() + "/dailyTracking?meal=night");
        }
    }
}